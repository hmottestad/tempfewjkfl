{"version":3,"sources":["../../../src/JsonLd/json-ld-helper.js"],"names":["JsonLdhelper","jsonld","typeIndex","resource","typeList","undefined","type","push","json","compactLiterals","bnodeCounter","id","indexOf","temp","parseInt","replace","reverse","property","constructor","Array","index","linkObjectsAndCompactLiterals","listIndex","resourceObject","String","Number"],"mappings":"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","file":"json-ld-helper.js","sourcesContent":["import moment from 'moment';\n\nclass JsonLdhelper {\n\n\n    static typeIndex(jsonld) {\n\n        let typeIndex = {};\n        for (let resource of jsonld) {\n            let typeList = resource[\"@type\"];\n            if (typeList !== undefined) {\n                for (let type of typeList) {\n                    if (typeIndex[type] === undefined) {\n                        typeIndex[type] = [];\n                    }\n\n                    typeIndex[type].push(resource);\n                }\n            }\n\n        }\n\n        return typeIndex;\n\n\n    }\n\n    static link(json, compactLiterals){\n\n        let jsonld = {}\n\n        let bnodeCounter = -1;\n\n\n        for (let resource of json) {\n            let id = resource['@id'];\n            if(id !== undefined && id.indexOf(\"_:b\") === 0){\n                let temp = parseInt(id.replace(\"_:b\", \"\"), 10);\n               if(bnodeCounter < temp){\n                   bnodeCounter = temp;\n               }\n            }\n        }\n\n\n\n        for (let resource of json) {\n\n            if(resource['@id'] === undefined){\n                resource['@id'] = \"_:b\"+(bnodeCounter++);\n            }\n\n            jsonld[resource['@id']] = resource;\n            resource.reverse = {};\n        }\n\n\n\n        for (let resource of json) {\n            for (let property in resource) {\n\n                if (resource[property].constructor === Array) {\n                    for (let index in resource[property]) {\n                        resource[property][index] = JsonLdhelper.linkObjectsAndCompactLiterals(resource[property][index], property, resource, compactLiterals, jsonld);\n\n                        if (resource[property][index][\"@list\"] !== undefined) {\n                            for (let listIndex in resource[property][index][\"@list\"]) {\n                                resource[property][index][\"@list\"][listIndex] = JsonLdhelper.linkObjectsAndCompactLiterals(resource[property][index][\"@list\"][listIndex], property, resource, compactLiterals, jsonld);\n                            }\n                        }\n                    }\n                }\n\n            }\n        }\n\n\n        return jsonld;\n\n\n    }\n\n    static  linkObjectsAndCompactLiterals(resourceObject, property, resource, compactLiterals, jsonld) {\n            let id = resourceObject[\"@id\"];\n            if (id !== undefined && jsonld[id] !== undefined) {\n                resourceObject = jsonld[id];\n\n                if (jsonld[id].reverse[property] === undefined) {\n                    jsonld[id].reverse[property] = [];\n                }\n\n                // Comment this line if you want to printout for test, it creates cycle reference on json data\n                jsonld[id].reverse[property].push(resource);\n\n            }\n\n            // Support for labels, language etc.  Set compactLitterals to false if you want to turn it off\n            if (compactLiterals) {\n                if (resourceObject[\"@type\"] !== undefined) {\n                    let type = resourceObject[\"@type\"];\n                    if (type === \"http://www.w3.org/2001/XMLSchema#date\" || type === \"http://www.w3.org/2001/XMLSchema#dateTime\") {\n                        resourceObject[\"@value\"] = moment(resourceObject[\"@value\"]);\n                    } else if (type === \"http://www.w3.org/2001/XMLSchema#integer\") {\n                        resourceObject[\"@value\"] = parseInt(resourceObject[\"@value\"], 10);\n                    } else {\n                        // console.log(\"HERE: \" + type);\n                    }\n\n\n                }\n\n                if (resourceObject[\"@value\"] !== undefined) {\n                    let temp = resourceObject;\n                    resourceObject = resourceObject[\"@value\"];\n                    if(typeof resourceObject === \"string\"){\n                        resourceObject = new String(resourceObject);\n                    }\n                    if(typeof resourceObject === \"number\"){\n                        resourceObject = new Number(resourceObject);\n                    }\n                    // resourceObject.prototype.getJsonLdObject = function () {\n                    //     return temp;\n                    // };\n\n                    resourceObject.jsonld = temp;\n\n\n                }\n            }\n            return resourceObject;\n        }\n\n\n}\n\nexport default JsonLdhelper;"]}